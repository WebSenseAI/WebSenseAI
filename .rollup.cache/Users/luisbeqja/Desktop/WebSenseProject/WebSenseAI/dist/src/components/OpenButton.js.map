{"version":3,"file":"OpenButton.js","sourceRoot":"","sources":["../../../src/components/OpenButton.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,gDAAgD,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AAEvG,MAAM,OAAO,UAAW,SAAQ,UAAU;IA+BxC,WAAW;QACT,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,mBAAmB,EAAE;YACjD,MAAM,EAAE,EAAE,4BAA4B,CAAE;YACxC,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD;QACE,KAAK,EAAE,CAAC;QAXkB,WAAM,GAAG,KAAK,CAAC;QAYzC,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAChD,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAA;IACJ,CAAC;IAGD,MAAM;QACJ,OAAO,IAAI,CAAA;qDACsC,QAAQ;qBACxC,IAAI,CAAC,WAAW,wBAAwB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;;;KAGjF,CAAC;IACJ,CAAC;;AArDM,iBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BlB,CAAC;AAE0B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CAAgB","sourcesContent":["import { html, css, LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nconst bgSvgUrl = new URL('/wp/wp-content/uploads/2024/06/open-button.png', import.meta.url).toString();\n\nexport class OpenButton extends LitElement {\n  static styles = css`\n    .open-button {\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        width: 60px;\n        height: 60px;\n        background-size: cover;\n        cursor: pointer;\n    }\n    .open-button--counter {\n      float: right;\n      background: #B53E3E;\n      width: 25px;\n      height: 25px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border-radius: 50%;\n      color: white;\n      border: 2px solid white;\n      transform: translate(20%, -20%);\n    }\n    .open {\n      display: none;\n    } \n  `;\n\n  @property({ type: String }) isOpen = false;\n\n  handleClick() {\n    const event = new CustomEvent('toggle-open-popup', {\n      detail: { /* Optional event details */ },\n      bubbles: true,\n      composed: true\n    });\n    this.dispatchEvent(event);\n  }\n  constructor() {\n    super();\n    window.addEventListener('toggle-open-popup', () => {\n      this.isOpen = !this.isOpen;\n    })\n  }\n\n\n  render() {\n    return html`\n      <style> .open-button { background-image: url(${bgSvgUrl}) } </style> \n      <div @click=\"${this.handleClick}\" class=\"open-button ${this.isOpen ? 'open' : ''}\">\n        <!-- <span class=\"open-button--counter\">1</span> -->\n      </div>\n    `;\n  }\n}\n"]}