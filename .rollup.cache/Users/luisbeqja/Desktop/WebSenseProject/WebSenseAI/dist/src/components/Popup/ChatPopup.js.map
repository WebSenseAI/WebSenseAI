{"version":3,"file":"ChatPopup.js","sourceRoot":"","sources":["../../../../src/components/Popup/ChatPopup.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AACzC,MAAM,OAAO,SAAU,SAAQ,UAAU;IA4CvC,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,SAAiB,EAAE,GAAW;QAC9C,yDAAyD;QACzD,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,GAAG,CAC5B,GAAG,UAAU,qBAAqB,GAAG,EAAE,EACvC;YACE,MAAM,EAAE;gBACN,QAAQ,EAAE,SAAS;aACpB;SACF,CACF,CAAC;QACF,MAAM,IAAI,GAAiB,MAAO,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,cAAc,EAAE;YAC5C,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aACd;YACD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;IAC5B,CAAC;IAED;QACE,KAAK,EAAE,CAAC;QAzCV,aAAQ,GAAG,EAAE,CAAC;QAGd,gBAAW,GAAY,KAAK,CAAC,CAAC,yBAAyB;QAGvD,QAAG,GAAW,EAAE,CAAC,CAAC,yBAAyB;QAoCzC,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAChD,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAA;QACF,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,CAAM,EAAE,EAAE;YACjD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;+BACgB,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;;;KAGtE,CAAC;IACJ,CAAC;;AA5FM,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgClB,CAAC;AAGF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CACb;AAGd;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,oCAAoC;8CACpC;AAG7B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,oCAAoC;sCAC/C","sourcesContent":["import axios from \"axios\";\nimport { html, css, LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { SERVER_URL } from \"../../utils\";\nexport class ChatPopup extends LitElement {\n  static styles = css`\n    .chat-popup {\n        width: 360px;\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        background: #FFFFFF;\n        height: 627px;\n        border-radius: 20px;\n        display: none;\n        z-index: 1000;\n        transform: translateY(50px);\n    }\n\n    .chat-popup.open{\n        display: block;\n        animation: myAnimation .5s forwards; \n    }\n\n    @keyframes myAnimation {\n      0% {\n        transform: translateY(-50);\n        opacity: 0;\n      }\n      50% {\n        opacity: 0.3;\n      }\n      100% {\n        transform: translateY(0px);\n        opacity: 1;\n      }\n    }\n  `;\n\n  @property({ type: Object })\n  chatData = {};\n\n  @property({ type: Boolean }) // Declare isPopupOpen as a property\n  isPopupOpen: boolean = false; // Initialize isPopupOpen\n\n  @property({ type: String }) // Declare isPopupOpen as a property\n  key: string = ''; // Initialize isPopupOpen\n\n  togglePopup() {\n    this.isPopupOpen = !this.isPopupOpen;\n  }\n\n  async sendMessage(questions: string, key: string) {\n    // Messagge sende to the server add animation of thinking\n    const result = await axios.get(\n      `${SERVER_URL}/api/response/get/${key}`,\n      {\n        params: {\n          question: questions\n        }\n      }\n    );\n    const data: string = (<any>result).data;\n    this.chatData = data;\n    this.requestUpdate();\n\n    const event = new CustomEvent('add-response', {\n      detail: {\n        message: data\n      },\n      bubbles: true,\n      composed: true\n    });\n    this.dispatchEvent(event);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  constructor() {\n    super();\n    window.addEventListener('toggle-open-popup', () => {\n      this.togglePopup();\n    })\n    window.addEventListener('send-message', (e: any) => {\n      this.sendMessage(e.detail.message, this.key);\n    })\n    this.isPopupOpen = false;\n  }\n\n  render() {\n    return html`\n      <div class=\"chat-popup ${this.isPopupOpen === true ? 'open' : 'close'}\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n"]}