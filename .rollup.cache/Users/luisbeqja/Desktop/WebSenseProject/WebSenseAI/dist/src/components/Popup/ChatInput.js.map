{"version":3,"file":"ChatInput.js","sourceRoot":"","sources":["../../../../src/components/Popup/ChatInput.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,GAAG,EAAE,SAAS,EAAO,MAAM,uBAAuB,CAAC;AAE5D,MAAM,OAAO,SAAU,SAAQ,UAAU;IAAzC;;QAmCE,iBAAY,GAA0B,SAAS,EAAE,CAAC;IA8BpD,CAAC;IA5BC,WAAW;;QACT,IAAI,CAAA,MAAA,IAAI,CAAC,YAAY,CAAC,KAAK,0CAAE,KAAK,MAAK,EAAE;YAAE,OAAO;QAClD,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,cAAc,EAAE;YAC5C,MAAM,EAAE;gBACN,OAAO,EAAE,MAAA,IAAI,CAAC,YAAY,CAAC,KAAK,0CAAE,KAAK;aACvC;YACF,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,KAAM,CAAC,KAAK,GAAG,EAAE,CAAC;IACtC,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,KAAoB;QACjC,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;+EAEgE,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,IAAI,CAAC,cAAc;0BAC3G,IAAI,CAAC,WAAW;;KAErC,CAAC;IACJ,CAAC;;AA/DM,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgClB,CAAC","sourcesContent":["import { html, css, LitElement } from \"lit\";\nimport { ref, createRef, Ref } from 'lit/directives/ref.js';\n\nexport class ChatInput extends LitElement {\n  static styles = css`\n    .chat-input {\n        width: 100%;\n        box-sizing: border-box;\n        display: flex;\n    }\n    .chat-input--input {\n        width: 100%;\n        height: 50px;\n        border: none;\n        border-top: 1px solid #E0E0E0;\n        background: #FFFFFF;\n        padding: 0 20px;\n        font-size: 16px;\n        box-sizing: border-box;\n        border-radius: 0 0 0 20px;\n        color: #000000;\n    }\n    .chat-input--input:focus-visible {\n        outline-offset: 0px;\n        outline: none;\n    }\n    .chat-input--button {\n        width: 50px;\n        height: 50px;\n        background: #FF5A5F;\n        color: #FFFFFF;\n        border: none;\n        border-radius: 0 0 20px 0;\n        font-size: 20px;\n        cursor: pointer;\n    }\n  `;\n\n  inputChatRef: Ref<HTMLInputElement> = createRef();\n\n  handleClick() {\n    if (this.inputChatRef.value?.value === '') return;\n    const event = new CustomEvent('send-message', {\n      detail: { \n        message: this.inputChatRef.value?.value\n       },\n      bubbles: true,\n      composed: true\n    });\n    this.dispatchEvent(event);\n    this.inputChatRef.value!.value = '';\n  }\n\n  // send message on click of return key\n  handleKeyPress(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.handleClick();\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"chat-input\">\n        <input class=\"chat-input--input\" type=\"text\" placeholder=\"Reply...\"  ${ref(this.inputChatRef)} @keydown=${this.handleKeyPress}>\n        <button @click=\"${this.handleClick}\" class=\"chat-input--button\">></button>\n      </div>\n    `;\n  }\n}\n"]}